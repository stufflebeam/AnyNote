name: Build and Push Backend to DockerHub

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  IMAGE_NAME: anynoteoffical/anynote

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4.0.1
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./backend/anynote
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      working-directory: ./backend/anynote
      
    - name: Publish
      run: |
        dotnet publish --self-contained true -c Release -r linux-x64 -o ./out/linux-amd64
        dotnet publish --self-contained true -c Release -r linux-arm64 -o ./out/linux-arm64 
      working-directory: ./backend/anynote
    
    # - name: List directory structure
    #   run: |
    #     echo "Current directory:"
    #     pwd
    #     echo "Directory structure:"
    #     ls -R
    #   working-directory: ./backend/anynote
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        platforms: linux/amd64,linux/arm64
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}
        
    - name: Get version
      id: get_version
      run: echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT


    - name: Build and push multi-architecture Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend/anynote
        file: ./backend/anynote/Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
              anynoteofficial/anynote:latest
              anynoteofficial/anynote:${{ steps.get_version.outputs.VERSION }}